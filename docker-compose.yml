services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
  #  eureka-server:
  #    image: xxamigoscode/eureka-server:latest
  #    container_name: eureka-server
  #    ports:
  #      - "8761:8761"
  #    environment:
  #      - SPRING_PROFILES_ACTIVE=docker
  #    networks:
  #      - spring
  #    depends_on:
  #      - zipkin
  #  apigw:
  #    image: amigoscode/apigw:latest
  #    container_name: apigw
  #    ports:
  #      - "8083:8083"
  #    environment:
  #      - SPRING_PROFILES_ACTIVE=docker
  #    networks:
  #      - spring
  #    depends_on:
  #      - zipkin
  #      - eureka-server



  web-server:
    image: webapp:latest
    container_name: webapp
    build:
      context: ./
      dockerfile: /ApiController/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
    depends_on:
      - postgres
  user-api:
    image: userapi:latest
    container_name: userapi
    build:
      context: ./
      dockerfile: /User/Dockerfile
    ports:
      - "3020:3020"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
      - web-app
    depends_on:
      - postgres
      - web-app
  group-api:
    image: groupapi:latest
    container_name: groupapi
    build:
      context: ./
      dockerfile: /Group/Dockerfile
    ports:
      - "3010:3010"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
      - web-app
    depends_on:
      - postgres
      - web-app
  task-api:
    image: taskapi:latest
    container_name: taskapi
    build:
      context: ./
      dockerfile: /Task/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - spring
      - postgres
      - web-app
    depends_on:
      - postgres
      - web-app
networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge
  web-app:
    driver: bridge
volumes:
  postgres:
  pgadmin: